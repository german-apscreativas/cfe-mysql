# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-mysql
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  bucket: serverless-mysql-img

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment:
    DB_DIALECT: "mysql"
    DB_NAME: "cfe"
    DB_USERNAME: "admin"
    DB_PASSWORD: "s0yelmejor"
    DB_HOST: "pruebatresmil1.cvqertizjuj0.us-east-1.rds.amazonaws.com"
    DB_PORT: "3306"
    REGION: "us-east-1"
    UPLOAD_ACCESS_KEY: "AKIA3HC7VDMBJMLR2KPC"
    UPLOAD_SECRET_KEY: "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"

functions:
  hello:
    handler: handler.hello
  getMedidor:
    handler: src/controller/medidor/handler.getMedidor
    events:
      - http:
          path: medidor
          method: get
  getMedidorById:
    handler: src/controller/medidor/handler.getMedidorById
    events:
      - http: 
          path: medidor/{ID}
          method: get
  newMedidor: 
    handler: src/controller/medidor/handler.newMedidor
    events:
      - http:
          path: medidor
          method: post
  upMedidor:
    handler: src/controller/medidor/handler.upMedidor
    events:
      - http:
          path: medidor/{ID}
          method: put
  deleteMedidor:
    handler: src/controller/medidor/handler.deleteMedidor
    events:
      - http:
          path: medidor/{ID}
          method: delete
  uploadImg:
    handler: src/controller/upload/handler.uploadFile
    environment:
      bucket: ${self:custom.bucket}
    events:
      - http:
          path: upload
          method: post

